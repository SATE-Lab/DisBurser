<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?><configuration>
  <property>
    <name>hbase.cluster.distributed</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.rootdir</name>
    <value>hdfs://mycluster/hbase</value>
  </property>
  <property>
    <name>hbase.tmp.dir</name>
    <value>./tmp</value>
  </property>
  <property>
    <name>hbase.unsafe.stream.capability.enforce</name>
    <value>false</value>
  </property>
  <property>
    <name>hbase.zookeeper.property.dataDir</name>
    <value>/zookeeper/apache-zookeeper-3.7.1-bin/zkdata</value>
  </property>
  <!--add zookeeper配置-->
  <property>
    <name>hbase.zookeeper.quorum</name>
    <value>10.2.0.7:2181,10.2.0.6:2181,10.2.0.13:2181</value>
  </property>
  <property>
    <name>zookeeper.session.timeout</name>
    <value>20000</value>
    <description>ZooKeeper session timeout in milliseconds. It is used in two different ways.
      First, this value is used in the ZK client that HBase uses to connect to the ensemble.
      It is also used by HBase when it starts a ZK server and it is passed as the 'maxSessionTimeout'.
      See https://zookeeper.apache.org/doc/current/zookeeperProgrammers.html#ch_zkSessions.
      For example, if an HBase region server connects to a ZK ensemble that's also managed
      by HBase, then the session timeout will be the one specified by this configuration.
      But, a region server that connects to an ensemble managed with a different configuration
      will be subjected that ensemble's maxSessionTimeout. So, even though HBase might propose
      using 90 seconds, the ensemble can have a max timeout lower than this and it will take
      precedence. The current default maxSessionTimeout that ZK ships with is 40 seconds, which is lower than
      HBase's.
    </description>
  </property>
  <!--hostname cfg-->
  <property>
    <name>hbase.regionserver.hostname</name>
    <value>server1</value>
  </property>
</configuration>
