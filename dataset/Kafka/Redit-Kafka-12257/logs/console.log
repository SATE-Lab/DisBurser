17:23:39.606 [main] INFO  io.redit.execution.RuntimeEngine - Waiting for event E1 ...
17:23:39.607 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Initiating connection to node 10.2.0.2:9092 (id: -3 rack: null) using address /10.2.0.2
17:23:39.612 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.kafka.common.network.Selector - [AdminClient clientId=adminclient-1] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node -3
17:23:39.663 [main] DEBUG o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Queueing Call(callName=createTopics, deadlineMs=1701163479663, tries=0, nextAllowedTryMs=0) with a timeout 60000 ms from now.
17:23:39.668 [main] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values:
	acks = 1
	batch.size = 16384
	bootstrap.servers = [10.2.0.4:9092, 10.2.0.3:9092, 10.2.0.2:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	internal.auto.downgrade.txn.commit = false
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

17:23:39.679 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.8.0
17:23:39.679 [kafka-producer-network-thread | producer-1] DEBUG o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Starting Kafka producer I/O thread.
17:23:39.679 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: ebb1d6e21cc92130
17:23:39.679 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1701163419679
17:23:39.680 [main] DEBUG o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Kafka producer started
17:23:39.680 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initialize connection to node 10.2.0.2:9092 (id: -3 rack: null) for sending metadata request
17:23:39.680 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating connection to node 10.2.0.2:9092 (id: -3 rack: null) using address /10.2.0.2
17:23:39.681 [kafka-producer-network-thread | producer-1] DEBUG o.a.kafka.common.network.Selector - [Producer clientId=producer-1] Created socket with SO_RCVBUF = 32768, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node -3
17:23:39.724 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Completed connection to node -3. Fetching API versions.
17:23:39.724 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Completed connection to node -3. Fetching API versions.
17:23:39.724 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Initiating API versions fetch from node -3.
17:23:39.724 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating API versions fetch from node -3.
17:23:39.735 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=0) and timeout 30000 to node -3: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
17:23:39.735 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=adminclient-1, correlationId=0) and timeout 3600000 to node -3: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
17:23:39.756 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Received API_VERSIONS response from node -3 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=adminclient-1, correlationId=0): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:23:39.756 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received API_VERSIONS response from node -3 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=0): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:23:39.779 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -3 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:23:39.779 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -3 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:23:39.779 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Sending MetadataRequestData(topics=[], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to 10.2.0.2:9092 (id: -3 rack: null). correlationId=1
17:23:39.779 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=adminclient-1, correlationId=1) and timeout 29826 to node -3: MetadataRequestData(topics=[], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:39.780 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.2:9092 (id: -3 rack: null)
17:23:39.780 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=producer-1, correlationId=1) and timeout 30000 to node -3: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:39.785 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Received METADATA response from node -3 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=adminclient-1, correlationId=1): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[], clusterAuthorizedOperations=-2147483648)
17:23:39.787 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Updating cluster metadata to Cluster(id = MAmJbKZ9T4ClUvWlc6JQ4g, nodes = [10.2.0.2:9092 (id: 2 rack: null), 10.2.0.3:9092 (id: 1 rack: null), 10.2.0.4:9092 (id: 0 rack: null)], partitions = [], controller = 10.2.0.4:9092 (id: 0 rack: null))
17:23:39.787 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Initiating connection to node 10.2.0.4:9092 (id: 0 rack: null) using address /10.2.0.4
17:23:39.787 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.kafka.common.network.Selector - [AdminClient clientId=adminclient-1] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 0
17:23:39.787 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Completed connection to node 0. Fetching API versions.
17:23:39.787 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Initiating API versions fetch from node 0.
17:23:39.787 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=adminclient-1, correlationId=2) and timeout 3600000 to node 0: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
17:23:39.793 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Received API_VERSIONS response from node 0 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=adminclient-1, correlationId=2): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:23:39.793 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 0 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:23:39.793 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Sending CreateTopicsRequestData(topics=[CreatableTopic(name='test', numPartitions=1, replicationFactor=1, assignments=[], configs=[])], timeoutMs=30000, validateOnly=false) to 10.2.0.4:9092 (id: 0 rack: null). correlationId=3
17:23:39.794 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Sending CREATE_TOPICS request with header RequestHeader(apiKey=CREATE_TOPICS, apiVersion=7, clientId=adminclient-1, correlationId=3) and timeout 30000 to node 0: CreateTopicsRequestData(topics=[CreatableTopic(name='test', numPartitions=1, replicationFactor=1, assignments=[], configs=[])], timeoutMs=30000, validateOnly=false)
17:23:39.815 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node -3 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=producer-1, correlationId=1): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=5, name='test', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:23:39.817 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 1 : {test=LEADER_NOT_AVAILABLE}
17:23:39.817 [kafka-producer-network-thread | producer-1] DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Requesting metadata update for topic test due to error LEADER_NOT_AVAILABLE
17:23:39.817 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: MAmJbKZ9T4ClUvWlc6JQ4g
17:23:39.817 [kafka-producer-network-thread | producer-1] DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 2 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:23:39.831 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Received CREATE_TOPICS response from node 0 for request with header RequestHeader(apiKey=CREATE_TOPICS, apiVersion=7, clientId=adminclient-1, correlationId=3): CreateTopicsResponseData(throttleTimeMs=0, topics=[CreatableTopicResult(name='test', topicId=AAAAAAAAAAAAAAAAAAAAAA, errorCode=36, errorMessage='Topic 'test' already exists.', topicConfigErrorCode=0, numPartitions=-1, replicationFactor=-1, configs=[])])
17:23:39.915 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initialize connection to node 10.2.0.4:9092 (id: 0 rack: null) for sending metadata request
17:23:39.915 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating connection to node 10.2.0.4:9092 (id: 0 rack: null) using address /10.2.0.4
17:23:39.915 [kafka-producer-network-thread | producer-1] DEBUG o.a.kafka.common.network.Selector - [Producer clientId=producer-1] Created socket with SO_RCVBUF = 32768, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 0
17:23:39.915 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Completed connection to node 0. Fetching API versions.
17:23:39.915 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating API versions fetch from node 0.
17:23:39.916 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=2) and timeout 30000 to node 0: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
17:23:39.917 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received API_VERSIONS response from node 0 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=2): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:23:39.917 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 0 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:23:39.917 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.4:9092 (id: 0 rack: null)
17:23:39.917 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=producer-1, correlationId=3) and timeout 30000 to node 0: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:39.925 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 0 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=producer-1, correlationId=3): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=V_i1g2YnS72wZ4TnZnO7mg, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=2, leaderEpoch=0, replicaNodes=[2], isrNodes=[2], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:23:39.926 [kafka-producer-network-thread | producer-1] DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updating last seen epoch for partition test-0 from null to epoch 0 from new metadata
17:23:39.928 [kafka-producer-network-thread | producer-1] DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 3 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=test-0, leader=Optional[2], leaderEpoch=Optional[0], replicas=2, isr=2, offlineReplicas=)], controller=10.2.0.4:9092 (id: 0 rack: null)}
Produced record with key key-0 and value value-0
Produced record with key key-1 and value value-1
Produced record with key key-2 and value value-2
17:23:39.935 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating connection to node 10.2.0.2:9092 (id: 2 rack: null) using address /10.2.0.2
Produced record with key key-3 and value value-3
Produced record with key key-4 and value value-4
Produced record with key key-5 and value value-5
Produced record with key key-6 and value value-6
Produced record with key key-7 and value value-7
Produced record with key key-8 and value value-8
Produced record with key key-9 and value value-9
17:23:39.936 [kafka-producer-network-thread | producer-1] DEBUG o.a.kafka.common.network.Selector - [Producer clientId=producer-1] Created socket with SO_RCVBUF = 32768, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 2
17:23:39.936 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Completed connection to node 2. Fetching API versions.
17:23:39.936 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating API versions fetch from node 2.
17:23:39.936 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=4) and timeout 30000 to node 2: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
17:23:39.937 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received API_VERSIONS response from node 2 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=4): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:23:39.937 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 2 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:23:39.940 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending PRODUCE request with header RequestHeader(apiKey=PRODUCE, apiVersion=9, clientId=producer-1, correlationId=5) and timeout 30000 to node 2: {acks=1,timeout=30000,partitionSizes=[test-0=251]}
17:23:39.965 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received PRODUCE response from node 2 for request with header RequestHeader(apiKey=PRODUCE, apiVersion=9, clientId=producer-1, correlationId=5): ProduceResponseData(responses=[TopicProduceResponse(name='test', partitionResponses=[PartitionProduceResponse(index=0, errorCode=0, baseOffset=0, logAppendTimeMs=-1, logStartOffset=0, recordErrors=[], errorMessage=null)])], throttleTimeMs=0)
17:23:39.971 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values:
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [10.2.0.4:9092, 10.2.0.3:9092, 10.2.0.2:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-example-group-1
	client.rack =
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = example-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

17:23:39.972 [main] DEBUG o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initializing the Kafka consumer
17:23:39.990 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.8.0
17:23:39.991 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: ebb1d6e21cc92130
17:23:39.991 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1701163419990
17:23:39.991 [main] DEBUG o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-example-group-1, groupId=example-group] Kafka consumer initialized
17:23:39.992 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initiating connection to node 10.2.0.3:9092 (id: -2 rack: null) using address /10.2.0.3
17:23:39.992 [main] DEBUG o.a.kafka.common.network.Selector - [Consumer clientId=consumer-example-group-1, groupId=example-group] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node -2
17:23:39.992 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Completed connection to node -2. Fetching API versions.
17:23:39.992 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initiating API versions fetch from node -2.
17:23:39.992 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-example-group-1, correlationId=1) and timeout 30000 to node -2: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
17:23:39.998 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received API_VERSIONS response from node -2 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-example-group-1, correlationId=1): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:23:39.998 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node -2 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:23:39.998 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending metadata request MetadataRequestData(topics=[], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.3:9092 (id: -2 rack: null)
17:23:39.998 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=2) and timeout 30000 to node -2: MetadataRequestData(topics=[], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:39.999 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=0) and timeout 30000 to node -2: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:40.003 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received METADATA response from node -2 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=2): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[], clusterAuthorizedOperations=-2147483648)
17:23:40.003 [main] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Cluster ID: MAmJbKZ9T4ClUvWlc6JQ4g
17:23:40.003 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updated cluster metadata updateVersion 2 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:23:40.008 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received METADATA response from node -2 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=0): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=V_i1g2YnS72wZ4TnZnO7mg, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=2, leaderEpoch=0, replicaNodes=[2], isrNodes=[2], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:23:40.009 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-example-group-1, groupId=example-group] Subscribed to topic(s): test
17:23:40.009 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FindCoordinator request to broker 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.010 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initiating connection to node 10.2.0.2:9092 (id: 2 rack: null) using address /10.2.0.2
17:23:40.011 [main] DEBUG o.a.kafka.common.network.Selector - [Consumer clientId=consumer-example-group-1, groupId=example-group] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 2
17:23:40.011 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Completed connection to node 2. Fetching API versions.
17:23:40.011 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initiating API versions fetch from node 2.
17:23:40.011 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-example-group-1, correlationId=4) and timeout 30000 to node 2: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
17:23:40.013 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received API_VERSIONS response from node 2 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-example-group-1, correlationId=4): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:23:40.013 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:23:40.013 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.013 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=5) and timeout 30000 to node 2: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:40.013 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=3) and timeout 30000 to node 2: FindCoordinatorRequestData(key='example-group', keyType=0)
17:23:40.015 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received METADATA response from node 2 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=5): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=V_i1g2YnS72wZ4TnZnO7mg, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=2, leaderEpoch=0, replicaNodes=[2], isrNodes=[2], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:23:40.015 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updating last seen epoch for partition test-0 from null to epoch 0 from new metadata
17:23:40.015 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updated cluster metadata updateVersion 3 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=test-0, leader=Optional[2], leaderEpoch=Optional[0], replicas=2, isr=2, offlineReplicas=)], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:23:40.037 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FIND_COORDINATOR response from node 2 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=3): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1)
17:23:40.037 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FindCoordinator response ClientResponse(receivedTimeMs=1701163420037, latencyMs=27, disconnected=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=3), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1))
17:23:40.037 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Group coordinator lookup failed: The coordinator is not available.
17:23:40.038 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
17:23:40.115 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.115 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=6) and timeout 30000 to node 2: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:40.117 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received METADATA response from node 2 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=6): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=V_i1g2YnS72wZ4TnZnO7mg, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=2, leaderEpoch=0, replicaNodes=[2], isrNodes=[2], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:23:40.117 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updating last seen epoch for partition test-0 from 0 to epoch 0 from new metadata
17:23:40.117 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updated cluster metadata updateVersion 4 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=test-0, leader=Optional[2], leaderEpoch=Optional[0], replicas=2, isr=2, offlineReplicas=)], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:23:40.117 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FindCoordinator request to broker 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.117 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=7) and timeout 30000 to node 2: FindCoordinatorRequestData(key='example-group', keyType=0)
17:23:40.120 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FIND_COORDINATOR response from node 2 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=7): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1)
17:23:40.120 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FindCoordinator response ClientResponse(receivedTimeMs=1701163420120, latencyMs=3, disconnected=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=7), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1))
17:23:40.120 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Group coordinator lookup failed: The coordinator is not available.
17:23:40.120 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
17:23:40.216 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.216 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=8) and timeout 30000 to node 2: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:40.219 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received METADATA response from node 2 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=8): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=V_i1g2YnS72wZ4TnZnO7mg, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=2, leaderEpoch=0, replicaNodes=[2], isrNodes=[2], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:23:40.219 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updating last seen epoch for partition test-0 from 0 to epoch 0 from new metadata
17:23:40.219 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updated cluster metadata updateVersion 5 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=test-0, leader=Optional[2], leaderEpoch=Optional[0], replicas=2, isr=2, offlineReplicas=)], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:23:40.219 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FindCoordinator request to broker 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.219 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=9) and timeout 30000 to node 2: FindCoordinatorRequestData(key='example-group', keyType=0)
17:23:40.222 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FIND_COORDINATOR response from node 2 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=9): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1)
17:23:40.222 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FindCoordinator response ClientResponse(receivedTimeMs=1701163420222, latencyMs=3, disconnected=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=9), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=15, errorMessage='The coordinator is not available.', nodeId=-1, host='', port=-1))
17:23:40.222 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Group coordinator lookup failed: The coordinator is not available.
17:23:40.222 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Coordinator discovery failed, refreshing metadata
org.apache.kafka.common.errors.CoordinatorNotAvailableException: The coordinator is not available.
17:23:40.319 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.319 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=10) and timeout 30000 to node 2: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:40.320 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received METADATA response from node 2 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=10): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=V_i1g2YnS72wZ4TnZnO7mg, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=2, leaderEpoch=0, replicaNodes=[2], isrNodes=[2], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:23:40.320 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updating last seen epoch for partition test-0 from 0 to epoch 0 from new metadata
17:23:40.320 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updated cluster metadata updateVersion 6 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=test-0, leader=Optional[2], leaderEpoch=Optional[0], replicas=2, isr=2, offlineReplicas=)], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:23:40.320 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FindCoordinator request to broker 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.320 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FIND_COORDINATOR request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=11) and timeout 30000 to node 2: FindCoordinatorRequestData(key='example-group', keyType=0)
17:23:40.322 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FIND_COORDINATOR response from node 2 for request with header RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=11): FindCoordinatorResponseData(throttleTimeMs=0, errorCode=0, errorMessage='NONE', nodeId=0, host='10.2.0.4', port=9092)
17:23:40.323 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FindCoordinator response ClientResponse(receivedTimeMs=1701163420322, latencyMs=2, disconnected=false, requestHeader=RequestHeader(apiKey=FIND_COORDINATOR, apiVersion=3, clientId=consumer-example-group-1, correlationId=11), responseBody=FindCoordinatorResponseData(throttleTimeMs=0, errorCode=0, errorMessage='NONE', nodeId=0, host='10.2.0.4', port=9092))
17:23:40.323 [main] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Discovered group coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:23:40.323 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initiating connection to node 10.2.0.4:9092 (id: 2147483647 rack: null) using address /10.2.0.4
17:23:40.324 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Executing onJoinPrepare with generation -1 and memberId
17:23:40.324 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Heartbeat thread started
17:23:40.325 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending synchronous auto-commit of offsets {}
17:23:40.325 [main] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] (Re-)joining group
17:23:40.325 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Joining group with current subscription: [test]
17:23:40.327 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending JoinGroup (JoinGroupRequestData(groupId='example-group', sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, memberId='', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])) to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:23:40.328 [main] DEBUG o.a.kafka.common.network.Selector - [Consumer clientId=consumer-example-group-1, groupId=example-group] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 2147483647
17:23:40.328 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Completed connection to node 2147483647. Fetching API versions.
17:23:40.328 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initiating API versions fetch from node 2147483647.
17:23:40.328 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-example-group-1, correlationId=13) and timeout 30000 to node 2147483647: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
17:23:40.331 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received API_VERSIONS response from node 2147483647 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-example-group-1, correlationId=13): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:23:40.331 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2147483647 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:23:40.331 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending JOIN_GROUP request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-example-group-1, correlationId=12) and timeout 305000 to node 2147483647: JoinGroupRequestData(groupId='example-group', sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, memberId='', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])
17:23:40.339 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received JOIN_GROUP response from node 2147483647 for request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-example-group-1, correlationId=12): JoinGroupResponseData(throttleTimeMs=0, errorCode=79, generationId=-1, protocolType=null, protocolName=null, leader='', memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', members=[])
17:23:40.339 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] JoinGroup failed due to non-fatal error: MEMBER_ID_REQUIRED Will set the member id as consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 and then rejoin. Sent generation was  Generation{generationId=-1, memberId='', protocol='null'}
17:23:40.339 [main] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] (Re-)joining group
17:23:40.339 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Joining group with current subscription: [test]
17:23:40.339 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending JoinGroup (JoinGroupRequestData(groupId='example-group', sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])) to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:23:40.339 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending JOIN_GROUP request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-example-group-1, correlationId=14) and timeout 305000 to node 2147483647: JoinGroupRequestData(groupId='example-group', sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])
17:23:40.348 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received JOIN_GROUP response from node 2147483647 for request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-example-group-1, correlationId=14): JoinGroupResponseData(throttleTimeMs=0, errorCode=0, generationId=1, protocolType='consumer', protocolName='range', leader='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', members=[JoinGroupResponseMember(memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])
17:23:40.348 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful JoinGroup response: JoinGroupResponseData(throttleTimeMs=0, errorCode=0, generationId=1, protocolType='consumer', protocolName='range', leader='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', members=[JoinGroupResponseMember(memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])
17:23:40.348 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Enabling heartbeat thread
17:23:40.348 [main] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', protocol='range'}
17:23:40.348 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Performing assignment using strategy range with subscriptions {consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960=org.apache.kafka.clients.consumer.ConsumerPartitionAssignor$Subscription@1a87b51}
17:23:40.350 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Finished assignment for group at generation 1: {consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960=Assignment(partitions=[test-0])}
17:23:40.351 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending leader SyncGroup to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null) at generation Generation{generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', protocol='range'}: SyncGroupRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, protocolType='consumer', protocolName='range', assignments=[SyncGroupRequestAssignment(memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])])
17:23:40.351 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending SYNC_GROUP request with header RequestHeader(apiKey=SYNC_GROUP, apiVersion=5, clientId=consumer-example-group-1, correlationId=15) and timeout 30000 to node 2147483647: SyncGroupRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, protocolType='consumer', protocolName='range', assignments=[SyncGroupRequestAssignment(memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])])
17:23:40.382 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received SYNC_GROUP response from node 2147483647 for request with header RequestHeader(apiKey=SYNC_GROUP, apiVersion=5, clientId=consumer-example-group-1, correlationId=15): SyncGroupResponseData(throttleTimeMs=0, errorCode=0, protocolType='consumer', protocolName='range', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])
17:23:40.383 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful SyncGroup response: SyncGroupResponseData(throttleTimeMs=0, errorCode=0, protocolType='consumer', protocolName='range', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])
17:23:40.383 [main] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', protocol='range'}
17:23:40.383 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Executing onJoinComplete with generation 1 and memberId consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960
17:23:40.383 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Notifying assignor about the new Assignment(partitions=[test-0])
17:23:40.384 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Adding newly assigned partitions: test-0
17:23:40.386 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Fetching committed offsets for partitions: [test-0]
17:23:40.386 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending OFFSET_FETCH request with header RequestHeader(apiKey=OFFSET_FETCH, apiVersion=7, clientId=consumer-example-group-1, correlationId=16) and timeout 30000 to node 2147483647: OffsetFetchRequestData(groupId='example-group', topics=[OffsetFetchRequestTopic(name='test', partitionIndexes=[0])], requireStable=true)
17:23:40.392 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received OFFSET_FETCH response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_FETCH, apiVersion=7, clientId=consumer-example-group-1, correlationId=16): OffsetFetchResponseData(throttleTimeMs=0, topics=[OffsetFetchResponseTopic(name='test', partitions=[OffsetFetchResponsePartition(partitionIndex=0, committedOffset=-1, committedLeaderEpoch=-1, metadata='', errorCode=0)])], errorCode=0)
17:23:40.392 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Found no committed offset for partition test-0
17:23:40.394 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending ListOffsetRequest ListOffsetsRequestData(replicaId=-1, isolationLevel=0, topics=[ListOffsetsTopic(name='test', partitions=[ListOffsetsPartition(partitionIndex=0, currentLeaderEpoch=0, timestamp=-2, maxNumOffsets=1)])]) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.394 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending LIST_OFFSETS request with header RequestHeader(apiKey=LIST_OFFSETS, apiVersion=6, clientId=consumer-example-group-1, correlationId=17) and timeout 30000 to node 2: ListOffsetsRequestData(replicaId=-1, isolationLevel=0, topics=[ListOffsetsTopic(name='test', partitions=[ListOffsetsPartition(partitionIndex=0, currentLeaderEpoch=0, timestamp=-2, maxNumOffsets=1)])])
17:23:40.402 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received LIST_OFFSETS response from node 2 for request with header RequestHeader(apiKey=LIST_OFFSETS, apiVersion=6, clientId=consumer-example-group-1, correlationId=17): ListOffsetsResponseData(throttleTimeMs=0, topics=[ListOffsetsTopicResponse(name='test', partitions=[ListOffsetsPartitionResponse(partitionIndex=0, errorCode=0, oldStyleOffsets=[], timestamp=-1, offset=0, leaderEpoch=0)])])
17:23:40.402 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Handling ListOffsetResponse response for test-0. Fetched offset 0, timestamp -1
17:23:40.403 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Not replacing existing epoch 0 with new epoch 0 for partition test-0
17:23:40.403 [main] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-example-group-1, groupId=example-group] Resetting offset for partition test-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}}.
17:23:40.405 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.405 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built full fetch (sessionId=INVALID, epoch=INITIAL) for node 2 with 1 partition(s).
17:23:40.405 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED FullFetchRequest(test-0) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.406 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=18) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=0, sessionEpoch=0, topics=[FetchTopic(topic='test', partitions=[FetchPartition(partition=0, currentLeaderEpoch=0, fetchOffset=0, lastFetchedEpoch=-1, logStartOffset=-1, partitionMaxBytes=1048576)])], forgottenTopicsData=[], rackId='')
17:23:40.426 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=18): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1408726540, responses=[FetchableTopicResponse(topic='test', partitionResponses=[FetchablePartitionResponse(partition=0, errorCode=0, highWatermark=10, lastStableOffset=10, logStartOffset=0, divergingEpoch=EpochEndOffset(epoch=-1, endOffset=-1), currentLeader=LeaderIdAndEpoch(leaderId=-1, leaderEpoch=-1), snapshotId=SnapshotId(endOffset=-1, epoch=-1), abortedTransactions=null, preferredReadReplica=-1, recordSet=MemoryRecords(size=251, buffer=java.nio.HeapByteBuffer[pos=0 lim=251 cap=254]))])])
17:23:40.426 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent a full fetch response that created a new incremental fetch session 1408726540 with 1 response partition(s)
17:23:40.427 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Fetch READ_UNCOMMITTED at offset 0 for partition test-0 returned fetch data (error=NONE, highWaterMark=10, lastStableOffset = 10, logStartOffset = 0, preferredReadReplica = absent, abortedTransactions = null, divergingEpoch =Optional.empty, recordsSizeInBytes=251)
17:23:40.428 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=10, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.428 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=1408726540, epoch=1) for node 2. Added 0 partition(s), altered 1 partition(s), removed 0 partition(s) out of 1 partition(s)
17:23:40.428 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(test-0), toForget=(), implied=()) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:23:40.428 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=19) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1408726540, sessionEpoch=1, topics=[FetchTopic(topic='test', partitions=[FetchPartition(partition=0, currentLeaderEpoch=0, fetchOffset=10, lastFetchedEpoch=-1, logStartOffset=-1, partitionMaxBytes=1048576)])], forgottenTopicsData=[], rackId='')
Consumed record with key key-0 and value value-0
Consumed record with key key-1 and value value-1
Consumed record with key key-2 and value value-2
Consumed record with key key-3 and value value-3
Consumed record with key key-4 and value value-4
Consumed record with key key-5 and value value-5
Consumed record with key key-6 and value value-6
Consumed record with key key-7 and value value-7
Consumed record with key key-8 and value value-8
Consumed record with key key-9 and value value-9
17:23:40.429 [main] INFO  io.redit.execution.RuntimeEngine - Sending test case event E1 ...
17:23:40.633 [qtp1564984895-22] INFO  io.redit.execution.EventService - Event E1 received!
17:23:40.633 [main] INFO  io.redit.execution.RuntimeEngine - Waiting for event X1 ...
17:23:40.634 [main] INFO  i.r.samples.kafkaexample.SampleTest - ============ shutdown kafka service on server 3 ============
17:23:40.753 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.kafka.common.network.Selector - [AdminClient clientId=adminclient-1] Connection with /10.2.0.2 disconnected
java.io.EOFException: null
	at org.apache.kafka.common.network.NetworkReceive.readFrom(NetworkReceive.java:97)
	at org.apache.kafka.common.network.KafkaChannel.receive(KafkaChannel.java:452)
	at org.apache.kafka.common.network.KafkaChannel.read(KafkaChannel.java:402)
	at org.apache.kafka.common.network.Selector.attemptRead(Selector.java:674)
	at org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:576)
	at org.apache.kafka.common.network.Selector.poll(Selector.java:481)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:561)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1333)
	at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1264)
	at java.lang.Thread.run(Thread.java:750)
17:23:40.753 [kafka-producer-network-thread | producer-1] DEBUG o.a.kafka.common.network.Selector - [Producer clientId=producer-1] Connection with /10.2.0.2 disconnected
java.io.EOFException: null
	at org.apache.kafka.common.network.NetworkReceive.readFrom(NetworkReceive.java:97)
	at org.apache.kafka.common.network.KafkaChannel.receive(KafkaChannel.java:452)
	at org.apache.kafka.common.network.KafkaChannel.read(KafkaChannel.java:402)
	at org.apache.kafka.common.network.Selector.attemptRead(Selector.java:674)
	at org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:576)
	at org.apache.kafka.common.network.Selector.poll(Selector.java:481)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:561)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:327)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:242)
	at java.lang.Thread.run(Thread.java:750)
17:23:40.753 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 2 disconnected.
17:23:40.753 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -3 disconnected.
17:23:40.754 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Requesting metadata update.
17:23:40.754 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.4:9092 (id: 0 rack: null)
17:23:40.754 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Sending MetadataRequestData(topics=[], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to 10.2.0.4:9092 (id: 0 rack: null). correlationId=4
17:23:40.754 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=producer-1, correlationId=6) and timeout 30000 to node 0: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:40.754 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=adminclient-1, correlationId=4) and timeout 30000 to node 0: MetadataRequestData(topics=[], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:40.754 [kafka-producer-network-thread | producer-1] DEBUG o.a.kafka.common.network.Selector - [Producer clientId=producer-1] Connection with /10.2.0.2 disconnected
java.io.EOFException: null
	at org.apache.kafka.common.network.NetworkReceive.readFrom(NetworkReceive.java:97)
	at org.apache.kafka.common.network.KafkaChannel.receive(KafkaChannel.java:452)
	at org.apache.kafka.common.network.KafkaChannel.read(KafkaChannel.java:402)
	at org.apache.kafka.common.network.Selector.attemptRead(Selector.java:674)
	at org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:576)
	at org.apache.kafka.common.network.Selector.poll(Selector.java:481)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:561)
	at org.apache.kafka.clients.producer.internals.Sender.runOnce(Sender.java:327)
	at org.apache.kafka.clients.producer.internals.Sender.run(Sender.java:242)
	at java.lang.Thread.run(Thread.java:750)
17:23:40.755 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -3 disconnected.
17:23:40.755 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Received METADATA response from node 0 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=adminclient-1, correlationId=4): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[], clusterAuthorizedOperations=-2147483648)
17:23:40.756 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received METADATA response from node 0 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=producer-1, correlationId=6): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=V_i1g2YnS72wZ4TnZnO7mg, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=2, leaderEpoch=0, replicaNodes=[2], isrNodes=[2], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:23:40.756 [kafka-producer-network-thread | producer-1] DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updating last seen epoch for partition test-0 from 0 to epoch 0 from new metadata
17:23:40.756 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Updating cluster metadata to Cluster(id = MAmJbKZ9T4ClUvWlc6JQ4g, nodes = [10.2.0.3:9092 (id: 1 rack: null), 10.2.0.4:9092 (id: 0 rack: null), 10.2.0.2:9092 (id: 2 rack: null)], partitions = [], controller = 10.2.0.4:9092 (id: 0 rack: null))
17:23:40.756 [kafka-producer-network-thread | producer-1] DEBUG org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Updated cluster metadata updateVersion 4 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=test-0, leader=Optional[2], leaderEpoch=Optional[0], replicas=2, isr=2, offlineReplicas=)], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:23:40.853 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.kafka.common.network.Selector - [Consumer clientId=consumer-example-group-1, groupId=example-group] Connection with /10.2.0.2 disconnected
java.io.EOFException: null
	at org.apache.kafka.common.network.NetworkReceive.readFrom(NetworkReceive.java:97)
	at org.apache.kafka.common.network.KafkaChannel.receive(KafkaChannel.java:452)
	at org.apache.kafka.common.network.KafkaChannel.read(KafkaChannel.java:402)
	at org.apache.kafka.common.network.Selector.attemptRead(Selector.java:674)
	at org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:576)
	at org.apache.kafka.common.network.Selector.poll(Selector.java:481)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:561)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:265)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup(ConsumerNetworkClient.java:306)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run(AbstractCoordinator.java:1367)
17:23:40.853 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 disconnected.
17:23:40.853 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.ConsumerNetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Cancelled request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=19) due to node 2 being disconnected
17:23:40.853 [kafka-coordinator-heartbeat-thread | example-group] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Error sending fetch request (sessionId=1408726540, epoch=1) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
17:23:40.954 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initialize connection to node 10.2.0.4:9092 (id: 0 rack: null) for sending metadata request
17:23:40.954 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initiating connection to node 10.2.0.4:9092 (id: 0 rack: null) using address /10.2.0.4
17:23:40.954 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.kafka.common.network.Selector - [Consumer clientId=consumer-example-group-1, groupId=example-group] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 0
17:23:40.954 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Completed connection to node 0. Fetching API versions.
17:23:40.954 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initiating API versions fetch from node 0.
17:23:40.954 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-example-group-1, correlationId=20) and timeout 30000 to node 0: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
17:23:41.155 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received API_VERSIONS response from node 0 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-example-group-1, correlationId=20): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:23:41.156 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 0 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:23:41.256 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.4:9092 (id: 0 rack: null)
17:23:41.256 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=21) and timeout 30000 to node 0: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:23:41.357 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received METADATA response from node 0 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=21): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=V_i1g2YnS72wZ4TnZnO7mg, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=2, leaderEpoch=0, replicaNodes=[2], isrNodes=[2], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:23:41.357 [kafka-coordinator-heartbeat-thread | example-group] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updating last seen epoch for partition test-0 from 0 to epoch 0 from new metadata
17:23:41.357 [kafka-coordinator-heartbeat-thread | example-group] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updated cluster metadata updateVersion 7 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=test-0, leader=Optional[2], leaderEpoch=Optional[0], replicas=2, isr=2, offlineReplicas=)], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:23:43.361 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 1 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:23:43.362 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=22) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:23:43.463 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=22): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:23:43.463 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:23:43.739 [main] INFO  i.r.e.s.SingleNodeRuntimeEngine - Restarting node server3 ...
17:23:46.368 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 1 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:23:46.368 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=23) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:23:46.469 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=23): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:23:46.469 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:23:49.374 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 1 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:23:49.375 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=24) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:23:49.475 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=24): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:23:49.475 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:23:52.381 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 1 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:23:52.381 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=25) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:23:52.482 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=25): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:23:52.482 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:23:54.286 [main] INFO  i.r.e.s.SingleNodeRuntimeEngine - Node server3 is restarted!
17:23:54.286 [Thread-35] INFO  i.r.samples.kafkaexample.SampleTest - server3 startServer...
17:23:55.387 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 1 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:23:55.387 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=26) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:23:55.488 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=26): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:23:55.488 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:23:58.393 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 1 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:23:58.393 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=27) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:23:58.493 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=27): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:23:58.493 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:23:59.286 [main] INFO  i.r.samples.kafkaexample.SampleTest - server3 startKafka...
17:24:01.398 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 1 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:24:01.398 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=28) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:24:01.499 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=28): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:24:01.499 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:24:04.403 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 1 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:24:04.403 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=29) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:24:04.460 [main] INFO  i.r.samples.kafkaexample.SampleTest - server1: jps
17:24:04.460 [main] INFO  i.r.samples.kafkaexample.SampleTest - Result output:
38 QuorumPeerMain
538 Kafka
763 Jps

17:24:04.504 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=29): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:24:04.504 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:24:04.653 [main] INFO  i.r.samples.kafkaexample.SampleTest - server2: jps
17:24:04.653 [main] INFO  i.r.samples.kafkaexample.SampleTest - Result output:
36 QuorumPeerMain
538 Kafka
763 Jps

17:24:04.827 [main] INFO  i.r.samples.kafkaexample.SampleTest - server3: jps
17:24:04.827 [main] INFO  i.r.samples.kafkaexample.SampleTest - Result output:
482 Kafka
35 QuorumPeerMain
623 Jps

17:24:04.827 [main] INFO  io.redit.execution.RuntimeEngine - Sending test case event X1 ...
17:24:04.833 [qtp1564984895-69] INFO  io.redit.execution.EventService - Event X1 received!
17:24:04.833 [main] INFO  io.redit.execution.RuntimeEngine - Waiting for event E2 ...
17:24:04.834 [main] INFO  i.r.samples.kafkaexample.SampleTest - delete topic: test
17:24:04.835 [main] DEBUG o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Queueing Call(callName=deleteTopics, deadlineMs=1701163504835, tries=0, nextAllowedTryMs=0) with a timeout 60000 ms from now.
17:24:04.835 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Sending DeleteTopicsRequestData(topics=[], topicNames=[test], timeoutMs=30000) to 10.2.0.4:9092 (id: 0 rack: null). correlationId=5
17:24:04.836 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Sending DELETE_TOPICS request with header RequestHeader(apiKey=DELETE_TOPICS, apiVersion=6, clientId=adminclient-1, correlationId=5) and timeout 30000 to node 0: DeleteTopicsRequestData(topics=[DeleteTopicState(name='test', topicId=AAAAAAAAAAAAAAAAAAAAAA)], topicNames=[test], timeoutMs=30000)
17:24:04.836 [main] INFO  i.r.samples.kafkaexample.SampleTest - create topic again
17:24:04.836 [main] DEBUG o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Queueing Call(callName=createTopics, deadlineMs=1701163504836, tries=0, nextAllowedTryMs=0) with a timeout 60000 ms from now.
Produced record with key key-0 and value value-0
17:24:04.836 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating connection to node 10.2.0.2:9092 (id: 2 rack: null) using address /10.2.0.2
Produced record with key key-1 and value value-1
Produced record with key key-2 and value value-2
Produced record with key key-3 and value value-3
17:24:04.836 [kafka-producer-network-thread | producer-1] DEBUG o.a.kafka.common.network.Selector - [Producer clientId=producer-1] Created socket with SO_RCVBUF = 32768, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 2
17:24:04.836 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Completed connection to node 2. Fetching API versions.
17:24:04.836 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Initiating API versions fetch from node 2.
Produced record with key key-4 and value value-4
17:24:04.836 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=7) and timeout 30000 to node 2: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
Produced record with key key-5 and value value-5
Produced record with key key-6 and value value-6
Produced record with key key-7 and value value-7
Produced record with key key-8 and value value-8
Produced record with key key-9 and value value-9
Produced record with key key-10 and value value-10
Produced record with key key-11 and value value-11
Produced record with key key-12 and value value-12
Produced record with key key-13 and value value-13
Produced record with key key-14 and value value-14
Produced record with key key-15 and value value-15
Produced record with key key-16 and value value-16
Produced record with key key-17 and value value-17
Produced record with key key-18 and value value-18
Produced record with key key-19 and value value-19
17:24:04.842 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received API_VERSIONS response from node 2 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=producer-1, correlationId=7): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:24:04.842 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 2 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:24:04.842 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Sending PRODUCE request with header RequestHeader(apiKey=PRODUCE, apiVersion=9, clientId=producer-1, correlationId=8) and timeout 30000 to node 2: {acks=1,timeout=30000,partitionSizes=[test-0=461]}
17:24:04.858 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Received DELETE_TOPICS response from node 0 for request with header RequestHeader(apiKey=DELETE_TOPICS, apiVersion=6, clientId=adminclient-1, correlationId=5): DeleteTopicsResponseData(throttleTimeMs=0, responses=[DeletableTopicResult(name='test', topicId=AAAAAAAAAAAAAAAAAAAAAA, errorCode=0, errorMessage=null)])
17:24:04.859 [kafka-admin-client-thread | adminclient-1] DEBUG o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Sending CreateTopicsRequestData(topics=[CreatableTopic(name='test', numPartitions=1, replicationFactor=1, assignments=[], configs=[])], timeoutMs=30000, validateOnly=false) to 10.2.0.4:9092 (id: 0 rack: null). correlationId=6
17:24:04.859 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Sending CREATE_TOPICS request with header RequestHeader(apiKey=CREATE_TOPICS, apiVersion=7, clientId=adminclient-1, correlationId=6) and timeout 30000 to node 0: CreateTopicsRequestData(topics=[CreatableTopic(name='test', numPartitions=1, replicationFactor=1, assignments=[], configs=[])], timeoutMs=30000, validateOnly=false)
17:24:04.862 [kafka-admin-client-thread | adminclient-1] DEBUG o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Received CREATE_TOPICS response from node 0 for request with header RequestHeader(apiKey=CREATE_TOPICS, apiVersion=7, clientId=adminclient-1, correlationId=6): CreateTopicsResponseData(throttleTimeMs=0, topics=[CreatableTopicResult(name='test', topicId=AAAAAAAAAAAAAAAAAAAAAA, errorCode=36, errorMessage='Topic 'test' already exists.', topicConfigErrorCode=0, numPartitions=-1, replicationFactor=-1, configs=[])])
17:24:04.868 [kafka-producer-network-thread | producer-1] DEBUG o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Received PRODUCE response from node 2 for request with header RequestHeader(apiKey=PRODUCE, apiVersion=9, clientId=producer-1, correlationId=8): ProduceResponseData(responses=[TopicProduceResponse(name='test', partitionResponses=[PartitionProduceResponse(index=0, errorCode=0, baseOffset=10, logAppendTimeMs=-1, logStartOffset=0, recordErrors=[], errorMessage=null)])], throttleTimeMs=0)
17:24:04.869 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-example-group-1, groupId=example-group] Subscribed to topic(s): test
17:24:04.869 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=10, leaderEpoch=0, metadata=''}}
17:24:04.870 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending OFFSET_COMMIT request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=30) and timeout 30000 to node 2147483647: OffsetCommitRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='test', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=10, committedLeaderEpoch=0, commitTimestamp=-1, committedMetadata='')])])
17:24:04.870 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=10, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:04.870 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built full fetch (sessionId=1408726540, epoch=INITIAL) for node 2 with 1 partition(s).
17:24:04.870 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED FullFetchRequest(test-0) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:04.870 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initiating connection to node 10.2.0.2:9092 (id: 2 rack: null) using address /10.2.0.2
17:24:04.871 [main] DEBUG o.a.kafka.common.network.Selector - [Consumer clientId=consumer-example-group-1, groupId=example-group] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 2
17:24:04.871 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Completed connection to node 2. Fetching API versions.
17:24:04.871 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Initiating API versions fetch from node 2.
17:24:04.871 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-example-group-1, correlationId=32) and timeout 30000 to node 2: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='2.8.0')
17:24:04.873 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received API_VERSIONS response from node 2 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=consumer-example-group-1, correlationId=32): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=12), ApiVersion(apiKey=2, minVersion=0, maxVersion=6), ApiVersion(apiKey=3, minVersion=0, maxVersion=11), ApiVersion(apiKey=4, minVersion=0, maxVersion=5), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=7), ApiVersion(apiKey=10, minVersion=0, maxVersion=3), ApiVersion(apiKey=11, minVersion=0, maxVersion=7), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=4), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=2), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=0), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
17:24:04.873 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 12 [usable: 12], ListOffsets(2): 0 to 6 [usable: 6], Metadata(3): 0 to 11 [usable: 11], LeaderAndIsr(4): 0 to 5 [usable: 5], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 7 [usable: 7], FindCoordinator(10): 0 to 3 [usable: 3], JoinGroup(11): 0 to 7 [usable: 7], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 4 [usable: 4], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 2 [usable: 2], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterIsr(56): 0 [usable: 0], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0]).
17:24:04.873 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=31) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=1408726540, sessionEpoch=0, topics=[FetchTopic(topic='test', partitions=[FetchPartition(partition=0, currentLeaderEpoch=0, fetchOffset=10, lastFetchedEpoch=-1, logStartOffset=-1, partitionMaxBytes=1048576)])], forgottenTopicsData=[], rackId='')
17:24:04.874 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received OFFSET_COMMIT response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=30): OffsetCommitResponseData(throttleTimeMs=0, topics=[OffsetCommitResponseTopic(name='test', partitions=[OffsetCommitResponsePartition(partitionIndex=0, errorCode=3)])])
17:24:04.874 [main] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Offset commit failed on partition test-0 at offset 10: This server does not host this topic-partition.
17:24:04.874 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=10, leaderEpoch=0, metadata=''}} failed due to retriable error: {}
org.apache.kafka.clients.consumer.RetriableCommitFailedException: Offset commit failed with a retriable exception. You should retry committing the latest consumed offsets.
Caused by: org.apache.kafka.common.errors.UnknownTopicOrPartitionException: This server does not host this topic-partition.
17:24:04.884 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=31): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[FetchableTopicResponse(topic='test', partitionResponses=[FetchablePartitionResponse(partition=0, errorCode=3, highWatermark=-1, lastStableOffset=-1, logStartOffset=-1, divergingEpoch=EpochEndOffset(epoch=-1, endOffset=-1), currentLeader=LeaderIdAndEpoch(leaderId=-1, leaderEpoch=-1), snapshotId=SnapshotId(endOffset=-1, epoch=-1), abortedTransactions=null, preferredReadReplica=-1, recordSet=MemoryRecords(size=0, buffer=java.nio.HeapByteBuffer[pos=0 lim=0 cap=3]))])])
17:24:04.884 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent a full fetch response that created a new incremental fetch session 2080760259 with 1 response partition(s)
17:24:04.884 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Fetch READ_UNCOMMITTED at offset 10 for partition test-0 returned fetch data (error=UNKNOWN_TOPIC_OR_PARTITION, highWaterMark=-1, lastStableOffset = -1, logStartOffset = -1, preferredReadReplica = absent, abortedTransactions = null, divergingEpoch =Optional.empty, recordsSizeInBytes=0)
17:24:04.884 [main] WARN  o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received unknown topic or partition error in fetch for partition test-0
17:24:04.884 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=10, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:04.884 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=1) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:04.884 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:04.884 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.4:9092 (id: 0 rack: null)
17:24:04.884 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=34) and timeout 30000 to node 0: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:24:04.885 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=33) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=1, topics=[], forgottenTopicsData=[], rackId='')
17:24:04.888 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=33): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[FetchableTopicResponse(topic='test', partitionResponses=[FetchablePartitionResponse(partition=0, errorCode=3, highWatermark=-1, lastStableOffset=-1, logStartOffset=-1, divergingEpoch=EpochEndOffset(epoch=-1, endOffset=-1), currentLeader=LeaderIdAndEpoch(leaderId=-1, leaderEpoch=-1), snapshotId=SnapshotId(endOffset=-1, epoch=-1), abortedTransactions=null, preferredReadReplica=-1, recordSet=MemoryRecords(size=0, buffer=java.nio.HeapByteBuffer[pos=0 lim=0 cap=3]))])])
17:24:04.889 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 1 response partition(s)
17:24:04.889 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Fetch READ_UNCOMMITTED at offset 10 for partition test-0 returned fetch data (error=UNKNOWN_TOPIC_OR_PARTITION, highWaterMark=-1, lastStableOffset = -1, logStartOffset = -1, preferredReadReplica = absent, abortedTransactions = null, divergingEpoch =Optional.empty, recordsSizeInBytes=0)
17:24:04.889 [main] WARN  o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received unknown topic or partition error in fetch for partition test-0
17:24:04.889 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=10, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:04.889 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=2) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:04.889 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:04.889 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=35) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=2, topics=[], forgottenTopicsData=[], rackId='')
17:24:04.889 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received METADATA response from node 0 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=34): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=5, name='test', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:24:04.889 [main] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Error while fetching metadata with correlation id 34 : {test=LEADER_NOT_AVAILABLE}
17:24:04.889 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Requesting metadata update for topic test due to error LEADER_NOT_AVAILABLE
17:24:04.889 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updated cluster metadata updateVersion 8 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:24:04.890 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Requesting to re-join the group and trigger rebalance since the assignment metadata has changed from (version6: {test=1}) to (version8: {})
17:24:04.890 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Requesting to re-join the group and trigger rebalance since the assignment metadata has changed from (version6: {test=1}) to (version8: {})
17:24:04.890 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Executing onJoinPrepare with generation 1 and memberId consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960
17:24:04.890 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending synchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=10, leaderEpoch=0, metadata=''}}
17:24:04.890 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending OFFSET_COMMIT request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=36) and timeout 30000 to node 2147483647: OffsetCommitRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='test', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=10, committedLeaderEpoch=0, commitTimestamp=-1, committedMetadata='')])])
17:24:04.890 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=35): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[FetchableTopicResponse(topic='test', partitionResponses=[FetchablePartitionResponse(partition=0, errorCode=3, highWatermark=-1, lastStableOffset=-1, logStartOffset=-1, divergingEpoch=EpochEndOffset(epoch=-1, endOffset=-1), currentLeader=LeaderIdAndEpoch(leaderId=-1, leaderEpoch=-1), snapshotId=SnapshotId(endOffset=-1, epoch=-1), abortedTransactions=null, preferredReadReplica=-1, recordSet=MemoryRecords(size=0, buffer=java.nio.HeapByteBuffer[pos=0 lim=0 cap=3]))])])
17:24:04.890 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 1 response partition(s)
17:24:04.890 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Fetch READ_UNCOMMITTED at offset 10 for partition test-0 returned fetch data (error=UNKNOWN_TOPIC_OR_PARTITION, highWaterMark=-1, lastStableOffset = -1, logStartOffset = -1, preferredReadReplica = absent, abortedTransactions = null, divergingEpoch =Optional.empty, recordsSizeInBytes=0)
17:24:04.891 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received OFFSET_COMMIT response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=36): OffsetCommitResponseData(throttleTimeMs=0, topics=[OffsetCommitResponseTopic(name='test', partitions=[OffsetCommitResponsePartition(partitionIndex=0, errorCode=3)])])
17:24:04.891 [main] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Offset commit failed on partition test-0 at offset 10: This server does not host this topic-partition.
17:24:04.991 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.4:9092 (id: 0 rack: null)
17:24:04.991 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=38) and timeout 30000 to node 0: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:24:04.991 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending OFFSET_COMMIT request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=37) and timeout 30000 to node 2147483647: OffsetCommitRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='test', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=10, committedLeaderEpoch=0, commitTimestamp=-1, committedMetadata='')])])
17:24:04.992 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received OFFSET_COMMIT response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=37): OffsetCommitResponseData(throttleTimeMs=0, topics=[OffsetCommitResponseTopic(name='test', partitions=[OffsetCommitResponsePartition(partitionIndex=0, errorCode=3)])])
17:24:04.992 [main] WARN  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Offset commit failed on partition test-0 at offset 10: This server does not host this topic-partition.
17:24:05.093 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending OFFSET_COMMIT request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=39) and timeout 30000 to node 2147483647: OffsetCommitRequestData(groupId='example-group', generationId=1, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='test', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=10, committedLeaderEpoch=0, commitTimestamp=-1, committedMetadata='')])])
17:24:05.093 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received METADATA response from node 0 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=38): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=5, name='test', topicId=AAAAAAAAAAAAAAAAAAAAAA, isInternal=false, partitions=[], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:24:05.093 [main] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Error while fetching metadata with correlation id 38 : {test=LEADER_NOT_AVAILABLE}
17:24:05.093 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Requesting metadata update for topic test due to error LEADER_NOT_AVAILABLE
17:24:05.093 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updated cluster metadata updateVersion 9 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:24:05.099 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received OFFSET_COMMIT response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=39): OffsetCommitResponseData(throttleTimeMs=0, topics=[OffsetCommitResponseTopic(name='test', partitions=[OffsetCommitResponsePartition(partitionIndex=0, errorCode=0)])])
17:24:05.099 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Committed offset 10 for partition test-0
17:24:05.100 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Revoke previously assigned partitions test-0
17:24:05.100 [main] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] (Re-)joining group
17:24:05.100 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Joining group with current subscription: [test]
17:24:05.100 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending JoinGroup (JoinGroupRequestData(groupId='example-group', sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])) to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:24:05.100 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending JOIN_GROUP request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-example-group-1, correlationId=40) and timeout 305000 to node 2147483647: JoinGroupRequestData(groupId='example-group', sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, protocolType='consumer', protocols=[JoinGroupRequestProtocol(name='range', metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])
17:24:05.100 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Ignoring fetched records for partition test-0 since it no longer has valid position
17:24:05.102 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received JOIN_GROUP response from node 2147483647 for request with header RequestHeader(apiKey=JOIN_GROUP, apiVersion=7, clientId=consumer-example-group-1, correlationId=40): JoinGroupResponseData(throttleTimeMs=0, errorCode=0, generationId=2, protocolType='consumer', protocolName='range', leader='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', members=[JoinGroupResponseMember(memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])
17:24:05.102 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful JoinGroup response: JoinGroupResponseData(throttleTimeMs=0, errorCode=0, generationId=2, protocolType='consumer', protocolName='range', leader='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', members=[JoinGroupResponseMember(memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, metadata=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, -1, -1, -1, -1, 0, 0, 0, 0])])
17:24:05.102 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Enabling heartbeat thread
17:24:05.102 [main] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Successfully joined group with generation Generation{generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', protocol='range'}
17:24:05.193 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending metadata request MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:05.193 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=41) and timeout 30000 to node 2: MetadataRequestData(topics=[MetadataRequestTopic(topicId=AAAAAAAAAAAAAAAAAAAAAA, name='test')], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
17:24:05.199 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received METADATA response from node 2 for request with header RequestHeader(apiKey=METADATA, apiVersion=11, clientId=consumer-example-group-1, correlationId=41): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=0, host='10.2.0.4', port=9092, rack=null), MetadataResponseBroker(nodeId=2, host='10.2.0.2', port=9092, rack=null), MetadataResponseBroker(nodeId=1, host='10.2.0.3', port=9092, rack=null)], clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', controllerId=0, topics=[MetadataResponseTopic(errorCode=0, name='test', topicId=GmcMi80ATMifxJYxXZNong, isInternal=false, partitions=[MetadataResponsePartition(errorCode=0, partitionIndex=0, leaderId=2, leaderEpoch=0, replicaNodes=[2], isrNodes=[2], offlineReplicas=[])], topicAuthorizedOperations=-2147483648)], clusterAuthorizedOperations=-2147483648)
17:24:05.199 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updating last seen epoch for partition test-0 from 0 to epoch 0 from new metadata
17:24:05.200 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Updated cluster metadata updateVersion 10 to MetadataCache{clusterId='MAmJbKZ9T4ClUvWlc6JQ4g', nodes={0=10.2.0.4:9092 (id: 0 rack: null), 1=10.2.0.3:9092 (id: 1 rack: null), 2=10.2.0.2:9092 (id: 2 rack: null)}, partitions=[PartitionMetadata(error=NONE, partition=test-0, leader=Optional[2], leaderEpoch=Optional[0], replicas=2, isr=2, offlineReplicas=)], controller=10.2.0.4:9092 (id: 0 rack: null)}
17:24:05.200 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Performing assignment using strategy range with subscriptions {consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960=org.apache.kafka.clients.consumer.ConsumerPartitionAssignor$Subscription@3ce53f6a}
17:24:05.200 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Finished assignment for group at generation 2: {consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960=Assignment(partitions=[test-0])}
17:24:05.200 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending leader SyncGroup to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null) at generation Generation{generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', protocol='range'}: SyncGroupRequestData(groupId='example-group', generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, protocolType='consumer', protocolName='range', assignments=[SyncGroupRequestAssignment(memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])])
17:24:05.200 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending SYNC_GROUP request with header RequestHeader(apiKey=SYNC_GROUP, apiVersion=5, clientId=consumer-example-group-1, correlationId=42) and timeout 30000 to node 2147483647: SyncGroupRequestData(groupId='example-group', generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, protocolType='consumer', protocolName='range', assignments=[SyncGroupRequestAssignment(memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])])
17:24:05.202 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received SYNC_GROUP response from node 2147483647 for request with header RequestHeader(apiKey=SYNC_GROUP, apiVersion=5, clientId=consumer-example-group-1, correlationId=42): SyncGroupResponseData(throttleTimeMs=0, errorCode=0, protocolType='consumer', protocolName='range', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])
17:24:05.202 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful SyncGroup response: SyncGroupResponseData(throttleTimeMs=0, errorCode=0, protocolType='consumer', protocolName='range', assignment=[0, 1, 0, 0, 0, 1, 0, 4, 116, 101, 115, 116, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, -1])
17:24:05.202 [main] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Successfully synced group in generation Generation{generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', protocol='range'}
17:24:05.202 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Executing onJoinComplete with generation 2 and memberId consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960
17:24:05.202 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Notifying assignor about the new Assignment(partitions=[test-0])
17:24:05.202 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Adding newly assigned partitions: test-0
17:24:05.202 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Fetching committed offsets for partitions: [test-0]
17:24:05.202 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending OFFSET_FETCH request with header RequestHeader(apiKey=OFFSET_FETCH, apiVersion=7, clientId=consumer-example-group-1, correlationId=43) and timeout 30000 to node 2147483647: OffsetFetchRequestData(groupId='example-group', topics=[OffsetFetchRequestTopic(name='test', partitionIndexes=[0])], requireStable=true)
17:24:05.203 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received OFFSET_FETCH response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_FETCH, apiVersion=7, clientId=consumer-example-group-1, correlationId=43): OffsetFetchResponseData(throttleTimeMs=0, topics=[OffsetFetchResponseTopic(name='test', partitions=[OffsetFetchResponsePartition(partitionIndex=0, committedOffset=10, committedLeaderEpoch=0, metadata='', errorCode=0)])], errorCode=0)
17:24:05.203 [main] DEBUG org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-example-group-1, groupId=example-group] Not replacing existing epoch 0 with new epoch 0 for partition test-0
17:24:05.203 [main] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Setting offset for partition test-0 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}}
17:24:05.204 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending OFFSET_FOR_LEADER_EPOCH request with header RequestHeader(apiKey=OFFSET_FOR_LEADER_EPOCH, apiVersion=4, clientId=consumer-example-group-1, correlationId=44) and timeout 30000 to node 2: OffsetForLeaderEpochRequestData(replicaId=-1, topics=[OffsetForLeaderTopic(topic='test', partitions=[OffsetForLeaderPartition(partition=0, currentLeaderEpoch=0, leaderEpoch=0)])])
17:24:05.210 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received OFFSET_FOR_LEADER_EPOCH response from node 2 for request with header RequestHeader(apiKey=OFFSET_FOR_LEADER_EPOCH, apiVersion=4, clientId=consumer-example-group-1, correlationId=44): OffsetForLeaderEpochResponseData(throttleTimeMs=0, topics=[OffsetForLeaderTopicResult(topic='test', partitions=[EpochEndOffset(errorCode=0, partition=0, leaderEpoch=0, endOffset=0)])])
17:24:05.210 [main] DEBUG o.a.k.c.c.i.OffsetsForLeaderEpochClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Handling OffsetsForLeaderEpoch response for test-0. Got offset 0 for epoch 0.
17:24:05.211 [main] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-example-group-1, groupId=example-group] Truncation detected for partition test-0 at offset FetchPosition{offset=10, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}}, resetting offset to the first offset known to diverge FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}}
17:24:05.211 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:05.211 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=3) for node 2. Added 0 partition(s), altered 1 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:05.211 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(test-0), toForget=(), implied=()) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:05.211 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=45) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=3, topics=[FetchTopic(topic='test', partitions=[FetchPartition(partition=0, currentLeaderEpoch=0, fetchOffset=0, lastFetchedEpoch=-1, logStartOffset=-1, partitionMaxBytes=1048576)])], forgottenTopicsData=[], rackId='')
17:24:05.723 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=45): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[FetchableTopicResponse(topic='test', partitionResponses=[FetchablePartitionResponse(partition=0, errorCode=0, highWatermark=0, lastStableOffset=0, logStartOffset=0, divergingEpoch=EpochEndOffset(epoch=-1, endOffset=-1), currentLeader=LeaderIdAndEpoch(leaderId=-1, leaderEpoch=-1), snapshotId=SnapshotId(endOffset=-1, epoch=-1), abortedTransactions=null, preferredReadReplica=-1, recordSet=MemoryRecords(size=0, buffer=java.nio.HeapByteBuffer[pos=0 lim=0 cap=3]))])])
17:24:05.723 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 1 response partition(s)
17:24:05.723 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Fetch READ_UNCOMMITTED at offset 0 for partition test-0 returned fetch data (error=NONE, highWaterMark=0, lastStableOffset = 0, logStartOffset = 0, preferredReadReplica = absent, abortedTransactions = null, divergingEpoch =Optional.empty, recordsSizeInBytes=0)
17:24:05.723 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:05.723 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=4) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:05.723 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:05.723 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=46) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=4, topics=[], forgottenTopicsData=[], rackId='')
17:24:06.271 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=46): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:06.271 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:06.370 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:06.370 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=5) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:06.370 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:06.370 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=47) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=5, topics=[], forgottenTopicsData=[], rackId='')
17:24:06.872 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=47): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:06.872 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:06.872 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:06.872 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=6) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:06.872 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:06.872 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=48) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=6, topics=[], forgottenTopicsData=[], rackId='')
17:24:07.471 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=48): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:07.471 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:07.871 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:07.871 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=7) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:07.871 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:07.871 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=49) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=7, topics=[], forgottenTopicsData=[], rackId='')
17:24:08.103 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 2 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:24:08.103 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=50) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:24:08.104 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=50): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:24:08.104 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:24:08.372 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=49): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:08.373 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:08.373 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:08.373 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=8) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:08.373 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:08.373 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=51) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=8, topics=[], forgottenTopicsData=[], rackId='')
17:24:08.972 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=51): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:08.972 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:09.372 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:09.372 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=9) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:09.372 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:09.372 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=52) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=9, topics=[], forgottenTopicsData=[], rackId='')
17:24:09.873 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=52): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:09.873 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:09.873 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:09.873 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=10) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:09.873 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:09.874 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=53) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=10, topics=[], forgottenTopicsData=[], rackId='')
17:24:10.202 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=0, leaderEpoch=0, metadata=''}}
17:24:10.202 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending OFFSET_COMMIT request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=54) and timeout 30000 to node 2147483647: OffsetCommitRequestData(groupId='example-group', generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='test', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=0, committedLeaderEpoch=0, commitTimestamp=-1, committedMetadata='')])])
17:24:10.204 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received OFFSET_COMMIT response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=54): OffsetCommitResponseData(throttleTimeMs=0, topics=[OffsetCommitResponseTopic(name='test', partitions=[OffsetCommitResponsePartition(partitionIndex=0, errorCode=0)])])
17:24:10.204 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Committed offset 0 for partition test-0
17:24:10.205 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Completed asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=0, leaderEpoch=0, metadata=''}}
17:24:10.472 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=53): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:10.472 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:10.872 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:10.872 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=11) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:10.872 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:10.872 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=55) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=11, topics=[], forgottenTopicsData=[], rackId='')
17:24:11.103 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 2 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:24:11.103 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=56) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:24:11.104 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=56): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:24:11.104 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:24:11.374 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=55): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:11.374 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:11.374 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:11.374 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=12) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:11.374 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:11.374 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=57) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=12, topics=[], forgottenTopicsData=[], rackId='')
17:24:11.973 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=57): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:11.974 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:12.373 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:12.374 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=13) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:12.374 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:12.374 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=58) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=13, topics=[], forgottenTopicsData=[], rackId='')
17:24:12.876 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=58): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:12.876 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:12.876 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:12.876 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=14) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:12.876 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:12.877 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=59) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=14, topics=[], forgottenTopicsData=[], rackId='')
17:24:13.474 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=59): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:13.474 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:13.874 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:13.874 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=15) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:13.874 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:13.874 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=60) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=15, topics=[], forgottenTopicsData=[], rackId='')
17:24:14.103 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 2 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:24:14.104 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=61) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:24:14.104 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=61): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:24:14.105 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:24:14.376 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=60): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:14.376 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:14.376 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:14.376 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=16) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:14.376 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:14.376 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=62) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=16, topics=[], forgottenTopicsData=[], rackId='')
17:24:14.974 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=62): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:14.974 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:15.373 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=0, leaderEpoch=0, metadata=''}}
17:24:15.374 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending OFFSET_COMMIT request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=63) and timeout 30000 to node 2147483647: OffsetCommitRequestData(groupId='example-group', generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='test', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=0, committedLeaderEpoch=0, commitTimestamp=-1, committedMetadata='')])])
17:24:15.374 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:15.374 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=17) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:15.374 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:15.374 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=64) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=17, topics=[], forgottenTopicsData=[], rackId='')
17:24:15.376 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received OFFSET_COMMIT response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-example-group-1, correlationId=63): OffsetCommitResponseData(throttleTimeMs=0, topics=[OffsetCommitResponseTopic(name='test', partitions=[OffsetCommitResponsePartition(partitionIndex=0, errorCode=0)])])
17:24:15.376 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Committed offset 0 for partition test-0
17:24:15.376 [main] DEBUG o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Completed asynchronous auto-commit of offsets {test-0=OffsetAndMetadata{offset=0, leaderEpoch=0, metadata=''}}
17:24:15.876 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=64): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:15.876 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:15.876 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:15.876 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=18) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:15.876 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:15.876 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=65) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=18, topics=[], forgottenTopicsData=[], rackId='')
17:24:16.474 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=65): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:16.475 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:16.874 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:16.874 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=19) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:16.874 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:16.875 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=66) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=19, topics=[], forgottenTopicsData=[], rackId='')
17:24:17.103 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending Heartbeat request with generation 2 and member id consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960 to coordinator 10.2.0.4:9092 (id: 2147483647 rack: null)
17:24:17.103 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending HEARTBEAT request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=67) and timeout 30000 to node 2147483647: HeartbeatRequestData(groupId='example-group', generationId=2, memberId='consumer-example-group-1-93eaa3cf-834e-4f4b-ad00-c064d6d5d960', groupInstanceId=null)
17:24:17.104 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-example-group-1, correlationId=67): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
17:24:17.104 [main] DEBUG o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received successful Heartbeat response
17:24:17.376 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=66): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:17.376 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:17.377 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:17.377 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=20) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:17.377 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:17.377 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=68) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=20, topics=[], forgottenTopicsData=[], rackId='')
17:24:17.975 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=68): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:17.975 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:18.375 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:18.375 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=21) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:18.375 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:18.375 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=69) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=21, topics=[], forgottenTopicsData=[], rackId='')
17:24:18.877 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=69): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:18.877 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)
17:24:18.877 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Added READ_UNCOMMITTED fetch request for partition test-0 at position FetchPosition{offset=0, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[10.2.0.2:9092 (id: 2 rack: null)], epoch=0}} to node 10.2.0.2:9092 (id: 2 rack: null)
17:24:18.877 [main] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Built incremental fetch (sessionId=2080760259, epoch=22) for node 2. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s) out of 1 partition(s)
17:24:18.877 [main] DEBUG o.a.k.c.consumer.internals.Fetcher - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending READ_UNCOMMITTED IncrementalFetchRequest(toSend=(), toForget=(), implied=(test-0)) to broker 10.2.0.2:9092 (id: 2 rack: null)
17:24:18.877 [main] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=70) and timeout 30000 to node 2: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=0, sessionId=2080760259, sessionEpoch=22, topics=[], forgottenTopicsData=[], rackId='')
17:24:19.475 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-example-group-1, groupId=example-group] Received FETCH response from node 2 for request with header RequestHeader(apiKey=FETCH, apiVersion=12, clientId=consumer-example-group-1, correlationId=70): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=2080760259, responses=[])
17:24:19.476 [kafka-coordinator-heartbeat-thread | example-group] DEBUG o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-example-group-1, groupId=example-group] Node 2 sent an incremental fetch response with throttleTimeMs = 0 for session 2080760259 with 0 response partition(s), 1 implied partition(s)

java.lang.AssertionError: Timeout without consuming enough messages

	at org.junit.Assert.fail(Assert.java:88)
	at io.redit.samples.kafka12257.SampleTest.consumeMessages(SampleTest.java:198)
	at io.redit.samples.kafka12257.SampleTest.lambda$testCreateTopicAndDeleteTopic$2(SampleTest.java:135)
	at io.redit.execution.RuntimeEngine.enforceOrder(RuntimeEngine.java:317)
	at io.redit.execution.RuntimeEngine.enforceOrder(RuntimeEngine.java:300)
	at io.redit.samples.kafka12257.SampleTest.testCreateTopicAndDeleteTopic(SampleTest.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)

